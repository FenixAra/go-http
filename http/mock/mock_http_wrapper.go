// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/FenixAra/go-http/http (interfaces: HttpWrapper)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockHttpWrapper is a mock of HttpWrapper interface
type MockHttpWrapper struct {
	ctrl     *gomock.Controller
	recorder *MockHttpWrapperMockRecorder
}

// MockHttpWrapperMockRecorder is the mock recorder for MockHttpWrapper
type MockHttpWrapperMockRecorder struct {
	mock *MockHttpWrapper
}

// NewMockHttpWrapper creates a new mock instance
func NewMockHttpWrapper(ctrl *gomock.Controller) *MockHttpWrapper {
	mock := &MockHttpWrapper{ctrl: ctrl}
	mock.recorder = &MockHttpWrapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockHttpWrapper) EXPECT() *MockHttpWrapperMockRecorder {
	return m.recorder
}

// MakeRequest mocks base method
func (m *MockHttpWrapper) MakeRequest(arg0, arg1, arg2 string, arg3, arg4 interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MakeRequest", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(error)
	return ret0
}

// MakeRequest indicates an expected call of MakeRequest
func (mr *MockHttpWrapperMockRecorder) MakeRequest(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MakeRequest", reflect.TypeOf((*MockHttpWrapper)(nil).MakeRequest), arg0, arg1, arg2, arg3, arg4)
}
